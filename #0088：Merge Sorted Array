//已知nums1的空间，从后往前的进行比较，从后插入
//可能会遇到nums1全大于nums2的情况，这时候最后要判断j的大小，若j！=0，则将nums2继续插入值nums1中
class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        int i = m - 1, j = n - 1, k = m + n - 1;
        while (i >= 0 && j >= 0) {
            if (nums1[i] > nums2[j]) nums1[k--] = nums1[i--];
            else nums1[k--] = nums2[j--];
        }
        while (j >= 0) nums1[k--] = nums2[j--];
    }
};
